generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model BattleSessions {
  sessionId                                                  String
  attackerUsername                                           String        @default("")
  defenderUsername                                           String        @default("")
  gameplayUserId                                             Int?
  result                                                     String        @default("")
  status                                                     String        @default("")
  target                                                     String        @default("")
  createdAt                                                  DateTime      @default(now())
  updatedAt                                                  DateTime      @default(now())
  deletedAt                                                  DateTime      @default(now())
  GameplayUser_BattleSessions_attackerUsernameToGameplayUser GameplayUser  @relation("BattleSessions_attackerUsernameToGameplayUser", fields: [attackerUsername], references: [username])
  GameplayUser_BattleSessions_defenderUsernameToGameplayUser GameplayUser  @relation("BattleSessions_defenderUsernameToGameplayUser", fields: [defenderUsername], references: [username])
  GameplayUser_BattleSessions_gameplayUserIdToGameplayUser   GameplayUser? @relation("BattleSessions_gameplayUserIdToGameplayUser", fields: [gameplayUserId], references: [id])

  @@id([attackerUsername, defenderUsername])
}

model FriendRequests {
  id             Int           @id @default(sequence(maxValue: 2147483647))
  username       String        @default("")
  friend         String        @default("")
  gameplayUserId Int?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  deletedAt      DateTime      @default(now())
  GameplayUser   GameplayUser? @relation(fields: [gameplayUserId], references: [id])
}

model GameplayUser {
  id                                                           Int              @id @default(sequence(maxValue: 2147483647))
  username                                                     String           @unique @default("")
  level                                                        Int              @default(1)
  exp                                                          Int              @default(0)
  money                                                        Int              @default(2000)
  health                                                       Int              @default(100)
  friendsOnly                                                  Boolean          @default(false)
  rank                                                         String           @default("Private")
  rankPoints                                                   Int              @default(0)
  createdAt                                                    DateTime         @default(now())
  updatedAt                                                    DateTime         @default(now())
  deletedAt                                                    DateTime         @default(now())
  isAlive                                                      Boolean          @default(true)
  BattleSessions_BattleSessions_attackerUsernameToGameplayUser BattleSessions[] @relation("BattleSessions_attackerUsernameToGameplayUser")
  BattleSessions_BattleSessions_defenderUsernameToGameplayUser BattleSessions[] @relation("BattleSessions_defenderUsernameToGameplayUser")
  BattleSessions_BattleSessions_gameplayUserIdToGameplayUser   BattleSessions[] @relation("BattleSessions_gameplayUserIdToGameplayUser")
  FriendRequests                                               FriendRequests[]
  Users                                                        Users            @relation(fields: [username], references: [username])
  InventoryItem                                                InventoryItem[]
  Locations                                                    Locations?
  Statistics                                                   Statistics[]
}

model InventoryItem {
  id           BigInt       @id @default(autoincrement())
  name         String
  quantity     Int
  userId       Int
  category     String
  GameplayUser GameplayUser @relation(fields: [userId], references: [id])
}

model Statistics {
  id                 BigInt       @id @default(autoincrement())
  userId             Int
  badges             String[]     @default([])
  numDeaths          Int          @default(0)
  numLootPlaced      Int          @default(0)
  numLandminesPlaced Int          @default(0)
  numMissilesPlaced  Int          @default(0)
  numLootPickups     Int          @default(0)
  GameplayUser       GameplayUser @relation(fields: [userId], references: [id])
}

model Landmine {
  id         Int      @id @default(sequence(maxValue: 2147483647))
  placedBy   String
  locLat     String   @default("")
  locLong    String   @default("")
  placedtime DateTime @default(now())
  type       String
  Expires    DateTime
  damage     Int      @default(1)
}

model LandmineType {
  name        String @id @unique
  description String
  price       Int
  damage      Int
  duration    Int
}

model Locations {
  username     String       @id @unique @default("")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  deletedAt    DateTime     @default(now())
  latitude     String       @default("")
  longitude    String       @default("")
  GameplayUser GameplayUser @relation(fields: [username], references: [username])
}

model Loot {
  id      Int      @id @default(sequence(maxValue: 2147483647))
  rarity  String
  Expires DateTime
  locLat  String   @default("")
  locLong String   @default("")
}

model Messages {
  id        Int    @id @default(sequence(maxValue: 2147483647))
  sender    String @default("")
  receiver  String @default("")
  content   String @default("")
  createdAt String @default("")
  updatedAt String @default("")
  deletedAt String @default("")
}

model Missile {
  id           Int      @id @default(sequence(maxValue: 2147483647))
  destLat      String   @default("")
  destLong     String   @default("")
  damage       Int      @default(1)
  radius       Int
  type         String
  sentBy       String
  sentAt       DateTime
  status       String
  currentLat   String   @default("")
  currentLong  String   @default("")
  timeToImpact DateTime
}

model MissileType {
  name        String @id @unique
  description String
  price       Int
  speed       Int
  radius      Int
  damage      Int
  fallout     Int
}

model RefreshTokens {
  id           Int    @id @default(sequence(maxValue: 2147483647))
  refreshToken String @default("")
}

model Sessions {
  lastIp        String @default("")
  username      String @id @default("")
  lastLoginTime String @default("")
  userAgent     String @default("")
}

model Users {
  id                Int           @id @default(sequence(maxValue: 2147483647))
  email             String        @default("")
  password          String        @default("")
  username          String        @unique @default("")
  role              String        @default("user")
  avatar            String        @default("")
  friends           String[]      @default([])
  notificationToken String        @default("")
  notifications     String[]      @default([])
  createdAt         DateTime      @default(now())
  deletedAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now())
  stripeCustomerId  String?       @unique
  GameplayUser      GameplayUser?
}
